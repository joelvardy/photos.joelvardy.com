#!/usr/bin/env php
<?php

// Initialise the application
require('init.php');

use App\Console;
use App\Photos;
use Intervention\Image\Image;

Console::title('Process Photos');

$photos = new Photos();

// Read data from file
$data = $photos->data();

$issues = 0;

foreach ($data as $photo) {

	// If the hash hasn't been set the file can't be found
	if ( ! isset($photo->hash)) {
		Console::output('The file '.$photo->filename.' could not be found!');
		$issues++;
		continue;
	}

	// Generate the filepath to the processed folder
	$photo_folder = $photos->directory('processed').'/'.$photo->hash;

	foreach ($photos->sizes() as $size => $size_info) {

		// If the processed folder does not exist, create it
		if ( ! file_exists($photo_folder)) {
			mkdir($photo_folder);
		}

		$filepath = $photo_folder.'/'.$size.'.jpg';

		// Check whether each size exists
		if ( ! file_exists($filepath)) {

			Console::output('We need to process the '.$size.' version of '.$photo->filename);

			// Open image
			$image = Image::make($photos->directory('original').'/'.$photo->filename);

			// Resize
			if ($photo->largest_dimension == 'height') {
				$image->heighten($size_info->max_dimension);
			} else if ($photo->largest_dimension == 'width') {
				$image->widen($size_info->max_dimension);
			}

			try {
				$image->save($filepath, $size_info->quality);
				Console::output("\tSaved processed image.");
			} catch (Exception $e) {
				Console::output("\tCould not save processed image.");
				$issues++;
			}

		}

	}

}

Console::summary($issues > 0 ? 'Warning, '.$issues.' issue(s) raised' : 'Processing photos was successful');
